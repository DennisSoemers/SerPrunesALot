#pragma once

#include <vector>

#include <QtWidgets/QMainWindow>
#include "GameBoardButton.h"
#include "GameConstants.h"
#include "GameState.h"
#include "ui_SerPrunesALot.h"

/**
 * The application's main window.
 *
 * Code initially generated by the ''New Project -> Qt Application'' wizard,
 * afterwards edited to add new methods and fields.
 */
class SerPrunesALotWindow : public QMainWindow
{
	Q_OBJECT

public:
	SerPrunesALotWindow(QWidget *parent = 0);
	~SerPrunesALotWindow();

	/** Informs the window that a certain button has been clicked */
	void buttonClicked(GameBoardButton* button);

	/** 
	 * Initializes the board, meaning that the board reverts to the game's initial state.
	 * Can also be used to reset.
	 */
	void initBoard();

	/** Updates the GUI, in order to show the currentGameState again */
	void updateGui();

protected:
	/** Event called right after the window has been resized, and before window is painted again */
	virtual void resizeEvent(QResizeEvent* event);

private:
	/** Matrix of all the buttons on the board */
	std::vector<std::vector<GameBoardButton*>> boardButtons;
	/** Vector of icons which are currently highlighted as being possible to move to */
	std::vector<GameBoardButton*> highlightedButtons;
	/** The current game state shown by the GUI */
	GameState currentGameState;
	/** The button that is currently selected */
	GameBoardButton* selectedButton;

	/** Something UI-related. This member was generated by the Qt Application wizard */
	Ui::SerPrunesALotClass ui;
};
